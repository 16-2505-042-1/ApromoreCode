<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2009-2016 The Apromore Initiative.
  ~
  ~ This file is part of "Apromore".
  ~
  ~ "Apromore" is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ "Apromore" is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this program.
  ~ If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:sws="http://www.springframework.org/schema/web-services" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:component-scan base-package="org.apromore"/>

    <bean id="simpleAuditedService" class="org.apromore.aop.SimpleAuditedService" />

    <!-- ************************** WebServices ************************** -->

    <sws:annotation-driven/>

    <sws:dynamic-wsdl id="manager" portTypeName="manager" locationUri="http://localhost:80/Apromore/services/manager">
        <sws:xsd location="classpath*:/manager.xsd"/>
    </sws:dynamic-wsdl>

    <sws:interceptors>
        <bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>
        <bean class="org.springframework.ws.soap.server.endpoint.interceptor.SoapEnvelopeLoggingInterceptor" p:logRequest="true" p:logResponse="true"/>
        <bean id="validatingInterceptor" class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor" p:schemas-ref="schemasList" p:validateRequest="true" p:validateResponse="true"/>
    </sws:interceptors>

    <!-- JAXB marshelling -->
    <bean id="marshallingMethodProcessor" class="org.springframework.ws.server.endpoint.adapter.method.MarshallingPayloadMethodProcessor"
          p:marshaller-ref="jaxb2Marshaller" p:unmarshaller-ref="jaxb2Marshaller"/>

    <bean id="defaultMethodEndpointAdapter" class="org.springframework.ws.server.endpoint.adapter.DefaultMethodEndpointAdapter">
        <property name="methodArgumentResolvers">
            <list>
                <ref bean="marshallingMethodProcessor"/>
            </list>
        </property>
        <property name="methodReturnValueHandlers">
            <list>
                <ref bean="marshallingMethodProcessor"/>
            </list>
        </property>
    </bean>

    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="schemas" ref="schemasList"/>
        <property name="contextPaths">
            <list>
                <value>org.apromore.model</value>
            </list>
        </property>
    </bean>

    <util:list id="schemasList">
        <value>classpath*:/manager.xsd</value>
    </util:list>

    <bean id="messageFactory" class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory"/>
    <bean id="messageReceiver" class="org.springframework.ws.soap.server.SoapMessageDispatcher"/>

    <bean id="lolaDir" class="org.apromore.service.impl.LolaDirImpl">
        <constructor-arg value="${pql.lola.dir}"/>
    </bean>
    <bean id="mysqlbean" class="org.apromore.service.impl.MySqlBeanImpl">
        <constructor-arg value="${pql.mysql.dir}"/>
        <constructor-arg value="${pql.mysql.user}"/>
        <constructor-arg value="${pql.mysql.password}"/>
    </bean>
    <bean id="pgbean" class="org.apromore.service.impl.PGBeanImpl">
        <constructor-arg value="${pql.postgres.host}"/>
        <constructor-arg value="${pql.postgres.name}"/>
        <constructor-arg value="${pql.postgres.user}"/>
        <constructor-arg value="${pql.postgres.password}"/>
    </bean>
    <bean id="pqlbean" class="org.apromore.service.impl.PqlBeanImpl" scope="prototype"><!-- prototype means that this bean is not a singleton  -->
        <constructor-arg ref="lolaDir"/>
        <constructor-arg ref="mysqlbean"/>
        <constructor-arg ref="pgbean"/>
        <constructor-arg type="boolean" value="false"/>
        <constructor-arg type="int" value="1"/>
        <constructor-arg type="String" value="LEVENSHTEIN"/>
        <constructor-arg type="String" value="/dev/null"/>
        <constructor-arg type="double" value="0.75"/>
        <constructor-arg type="String" value="0.5,0.75, 1.0"/>
        <constructor-arg type="long" value="300"/>
        <constructor-arg type="long" value="86400"/>
    </bean>
    <bean id="gedmatrixbean" class="org.apromore.service.impl.GEDMatrixBeanImpl">
        <constructor-arg value="false"/>
    </bean>


    <!-- ************************** Non WebServices ************************** -->

    <bean id="canonicalToGraph" class="org.apromore.graph.canonical.converter.CanonicalToGraph" />
    <bean id="graphToCanonical" class="org.apromore.graph.canonical.converter.GraphToCanonical" />

    <bean id="epml2bpmnPreAnnotationProcessor" class="org.apromore.annotation.epml2bpmn.Epml2BpmnPreProcessor" />
    <bean id="xpdl2bpmnPreAnnotationProcessor" class="org.apromore.annotation.xpdl2bpmn.Xpdl2BpmnPreProcessor" />
    <bean id="cpf2bpmnPreAnnotationProcessor" class="org.apromore.annotation.cpf2bpmn.Cpf2BpmnPreProcessor" />
    <bean id="epml2xpdlPreAnnotationProcessor" class="org.apromore.annotation.epml2xpdl.Epml2XpdlPreProcessor" />
    <bean id="bpmn2epmlPreAnnotationProcessor" class="org.apromore.annotation.bpmn2epml.Bpmn2EpmlPreProcessor" />
    <bean id="xpdl2epmlPreAnnotationProcessor" class="org.apromore.annotation.xpdl2epml.Xpdl2EpmlPreProcessor" />
    <bean id="yawl2epmlPreAnnotationProcessor" class="org.apromore.annotation.yawl2epml.Yawl2EpmlPreProcessor" />
    <bean id="bpmn2yawlPreAnnotationProcessor" class="org.apromore.annotation.bpmn2yawl.Bpmn2YawlPreProcessor" />
    <bean id="epml2yawlPreAnnotationProcessor" class="org.apromore.annotation.epml2yawl.Epml2YawlPreProcessor" />


    <!-- Beans used for OSGi setup. -->
    <bean id="arisCanoniser" class="org.apromore.canoniser.aris.ArisCanoniser" />
    <bean id="bpmnCanoniser" class="org.apromore.canoniser.bpmn.BPMN20Canoniser" />
    <bean id="epmlCanoniser" class="org.apromore.canoniser.epml.EPML20Canoniser" />
    <bean id="pnmlCanoniser" class="org.apromore.canoniser.pnml.PNML132Canoniser" />
    <bean id="xpdlCanoniser" class="org.apromore.canoniser.xpdl.XPDL22Canoniser" />
    <bean id="yawlCanoniser" class="org.apromore.canoniser.yawl.YAWL22Canoniser" />

    <util:set id="canonisers">
        <ref bean="arisCanoniser" />
        <ref bean="bpmnCanoniser" />
        <ref bean="epmlCanoniser" />
        <ref bean="pnmlCanoniser" />
        <ref bean="xpdlCanoniser" />
        <ref bean="yawlCanoniser" />
    </util:set>

    <util:set id="processPlugins">
    </util:set>

    <!-- Just test the provider outside of OSGi -->
    <bean id="pluginProvider" class="org.apromore.plugin.provider.impl.PluginProviderImpl"/>
    <bean id="canoniserProvider" class="org.apromore.canoniser.provider.impl.CanoniserProviderImpl" p:canoniserSet-ref="canonisers"/>
    <bean id="deploymentProvider" class="org.apromore.plugin.deployment.provider.impl.DeploymentPluginProviderImpl"/>
    <bean id="annotationProcessorProvider" class="org.apromore.annotation.provider.impl.AnnotationProcessorProviderImpl"/>

    <!-- Mock Providers -->
    <bean id="mockDeploymentProvider" class="org.apromore.plugin.deployment.MockDeploymentPluginProvider" />

</beans>
